<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.cesarbarone.pusherbeams.capacitorpusherbeams.test" >

    <uses-sdk
        android:minSdkVersion="21"
        android:targetSdkVersion="28" />

    <instrumentation
        android:name="android.support.test.runner.AndroidJUnitRunner"
        android:functionalTest="false"
        android:handleProfiling="false"
        android:label="Tests for com.cesarbarone.pusherbeams.capacitorpusherbeams.test"
        android:targetPackage="com.cesarbarone.pusherbeams.capacitorpusherbeams.test" />

    <uses-feature
        android:name="android.hardware.camera"
        android:required="false" />

    <permission
        android:name="com.cesarbarone.pusherbeams.capacitorpusherbeams.test.permission.C2D_MESSAGE"
        android:protectionLevel="signature" />

    <uses-permission android:name="com.cesarbarone.pusherbeams.capacitorpusherbeams.test.permission.C2D_MESSAGE" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.WAKE_LOCK" /> <!-- Required by older versions of Google Play services to create IID tokens -->
    <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />
    <uses-permission android:name="com.google.android.finsky.permission.BIND_GET_INSTALL_REFERRER_SERVICE" />

    <application
        android:appComponentFactory="android.support.v4.app.CoreComponentFactory"
        android:debuggable="true"
        android:fullBackupContent="@xml/backup_rules" >
        <uses-library android:name="android.test.runner" />

        <service
            android:name="com.getcapacitor.plugin.background.BackgroundTaskService"
            android:exported="false" />

        <receiver android:name="com.getcapacitor.plugin.notification.TimedNotificationPublisher" />
        <receiver android:name="com.getcapacitor.plugin.notification.NotificationDismissReceiver" />

        <meta-data
            android:name="firebase_messaging_auto_init_enabled"
            android:value="false" />

        <service
            android:name="com.getcapacitor.CapacitorFirebaseMessagingService"
            android:stopWithTask="false" >
            <intent-filter>
                <action android:name="com.google.firebase.MESSAGING_EVENT" />
            </intent-filter>
        </service>
        <!--
             FirebaseMessagingService performs security checks at runtime,
             but set to not exported to explicitly avoid allowing another app to call it.
        -->
        <service
            android:name="com.google.firebase.messaging.FirebaseMessagingService"
            android:exported="false" >
            <intent-filter android:priority="-500" >
                <action android:name="com.google.firebase.MESSAGING_EVENT" />
            </intent-filter>
        </service>

        <receiver
            android:name="com.pusher.pushnotifications.reporting.FCMMessageReceiver"
            android:exported="true"
            android:permission="com.google.android.c2dm.permission.SEND" >
            <intent-filter>
                <action android:name="com.google.android.c2dm.intent.RECEIVE" />

                <category android:name="com.cesarbarone.pusherbeams.capacitorpusherbeams.test" />
            </intent-filter>
        </receiver>

        <service
            android:name="com.pusher.pushnotifications.reporting.ReportingJobService"
            android:exported="true"
            android:permission="android.permission.BIND_JOB_SERVICE" >
            <intent-filter>
                <action android:name="com.firebase.jobdispatcher.ACTION_EXECUTE" />
            </intent-filter>
        </service>
        <service android:name="com.pusher.pushnotifications.fcm.EmptyMessagingService" >
            <intent-filter android:priority="1" >
                <action android:name="com.google.firebase.MESSAGING_EVENT" />
            </intent-filter>
        </service>

        <provider
            android:name="com.pusher.pushnotifications.internal.PushNotificationsInitProvider"
            android:authorities="com.cesarbarone.pusherbeams.capacitorpusherbeams.test.pushnotificationsinitprovider"
            android:exported="false"
            android:initOrder="99" />

        <activity android:name="com.pusher.pushnotifications.reporting.OpenNotificationActivity" >
            <intent-filter>
                <action android:name="com.pusher.pushnotifications.OPEN_TRACKING" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>

        <service
            android:name="com.google.firebase.components.ComponentDiscoveryService"
            android:exported="false" >
            <meta-data
                android:name="com.google.firebase.components:com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar"
                android:value="com.google.firebase.components.ComponentRegistrar" />
            <meta-data
                android:name="com.google.firebase.components:com.google.firebase.iid.Registrar"
                android:value="com.google.firebase.components.ComponentRegistrar" />
        </service>

        <receiver
            android:name="com.google.firebase.iid.FirebaseInstanceIdReceiver"
            android:exported="true"
            android:permission="com.google.android.c2dm.permission.SEND" >
            <intent-filter>
                <action android:name="com.google.android.c2dm.intent.RECEIVE" />
            </intent-filter>
        </receiver>

        <provider
            android:name="com.google.firebase.provider.FirebaseInitProvider"
            android:authorities="com.cesarbarone.pusherbeams.capacitorpusherbeams.test.firebaseinitprovider"
            android:exported="false"
            android:initOrder="100" />

        <activity
            android:name="com.google.android.gms.common.api.GoogleApiActivity"
            android:exported="false"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />

        <receiver
            android:name="com.google.android.gms.measurement.AppMeasurementReceiver"
            android:enabled="true"
            android:exported="false" >
        </receiver>
        <receiver
            android:name="com.google.android.gms.measurement.AppMeasurementInstallReferrerReceiver"
            android:enabled="true"
            android:exported="true"
            android:permission="android.permission.INSTALL_PACKAGES" >
            <intent-filter>
                <action android:name="com.android.vending.INSTALL_REFERRER" />
            </intent-filter>
        </receiver>

        <service
            android:name="com.google.android.gms.measurement.AppMeasurementService"
            android:enabled="true"
            android:exported="false" />
        <service
            android:name="com.google.android.gms.measurement.AppMeasurementJobService"
            android:enabled="true"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE" />

        <meta-data
            android:name="com.google.android.gms.version"
            android:value="@integer/google_play_services_version" />
        <!--
             Receives GooglePlay execution requests and forwards them to the
             appropriate internal service.
        -->
        <service
            android:name="com.firebase.jobdispatcher.GooglePlayReceiver"
            android:exported="true"
            android:permission="com.google.android.gms.permission.BIND_NETWORK_TASK_SERVICE" >
            <intent-filter>
                <action android:name="com.google.android.gms.gcm.ACTION_TASK_READY" />
            </intent-filter>
        </service>

        <provider
            android:name="android.arch.lifecycle.ProcessLifecycleOwnerInitializer"
            android:authorities="com.cesarbarone.pusherbeams.capacitorpusherbeams.test.lifecycle-trojan"
            android:exported="false"
            android:multiprocess="true" />
    </application>

</manifest>